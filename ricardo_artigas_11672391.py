# -*- coding: utf-8 -*-
"""Ricardo Artigas 11672391

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-y3TIXStPwqYC_U6ncWX71Q4Q8E7avtD

MÃ©todo de MonteCarlo
"""

import numpy as np
from scipy.stats import norm

def estimar_pi(n):
    soma = 0
    for i in range(n):
        x = np.random.rand()
        y = np.random.rand()

        if x**2 + y**2 <= 1:
            soma += 1

    pi= (soma / n) * 4
    return pi

def CalcularN(margem_erro=0.0005, confianca=0.95):
    z = norm.ppf((1 + confianca) / 2)
    n = int((z / (2 * margem_erro))**2)
    return n

valor_n = CalcularN()
pi = estimar_pi(valor_n)

print(f"Pi: {pi}")